---
parameters:
- name: plan
  displayName: "Select to plan changes"
  type: boolean
  default: true

- name: apply
  displayName: "Select me to apply changes"
  type: boolean
  default: false

- name: destroy
  displayName: "Select me to destroy the infrastructure (and universe)"
  type: boolean 
  default: false 

name: Terraform Azure
trigger: none
pool:
  vmImage: ubuntu-latest

steps:
- task: TerraformInstaller@1
  inputs:
    terraformVersion: '1.3.9'
    terraformDownloadLocation: 'https://releases.hashicorp.com/terraform'
    
- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: '$(AZSub)'
    backendAzureRmResourceGroupName: 'phoenixtech-tfstate-rg'
    backendAzureRmStorageAccountName: 'mwtfstateyqpqj'
    backendAzureRmContainerName: 'core-tfstate'
    backendAzureRmKey: 'tf/terraform.state'

- ${{ if eq(parameters['plan'], true)}}:
  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'custom'
      customCommand: 'plan'
      outputTo: 'file'
      fileName: 'plan'
      environmentServiceNameAzureRM: '$(AZSub)'
    
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.SourcesDirectory)/plan'
      artifactName: 'terraformPlan'
      publishLocation: 'Container'

- ${{ if eq(parameters['apply'], true)}}:
  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'apply'
      environmentServiceNameAzureRM: '$(AZSub)'

- ${{if eq(parameters['destroy'], true)}}:
  - task: TerraformTaskV4@4
    inputs:
      provider: 'azurerm'
      command: 'destroy'
      environmentServiceNameAzureRM: '$(AZSub)'

